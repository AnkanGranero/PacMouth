{"version":3,"sources":["images/hotdog1.jpg","images/hotdog2.jpg","images/hotdog3.jpg","images/hotdog4.jpg","images/pacmouth.jpg","images/pacmouth2.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createArray","len","value","arr","i","push","pictures","hot1","hot2","hot3","hot4","delay","ms","Promise","resolve","setTimeout","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","arrayOfIndex","direction","sum","setState","window","addEventListener","handleChangeDirection","bind","index","changeRenderedPictures","changeRenderedPicturesBackwards","_this2","concat","toConsumableArray","slice","length","_this3","event","key","_this4","console","log","imageStyle","height","margin","padding","border","wrapperHotdogStyle","display","flexWrap","pacDirection","pacMouth","pacMouth2","images","map","number","react_default","a","createElement","style","src","onClick","handleDirection","alt","backgroundColor","alignContent","marginLeft","marginRight","container","App_HotDog","Component","HotDog","props","background","alignItems","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9b132b3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hotdog1.04b0451b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotdog2.45617641.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotdog3.18b39bc8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hotdog4.0a8e5703.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pacmouth.a9708de1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pacmouth2.893f24a2.jpg\";","import React, { Component } from \"react\";\n\nimport hot1 from \"./images/hotdog1.jpg\";\nimport hot2 from \"./images/hotdog2.jpg\";\nimport hot3 from \"./images/hotdog3.jpg\";\nimport hot4 from \"./images/hotdog4.jpg\";\n\nimport pacMouth from \"./images/pacmouth.jpg\";\nimport pacMouth2 from \"./images/pacmouth2.jpg\";\n\nimport \"./App.css\";\n\nfunction createArray(len, value) {\n  let arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(value);\n  }\n  return arr;\n}\n\nconst pictures = [hot1, hot2, hot3, hot4];\n\nfunction delay(ms) {\n  return new Promise(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      arrayOfIndex: createArray(42, 0),\n      direction: true\n    };\n  }\n  handleOutArrayOfIndex() {\n    let sum = [];\n    for (let i = 0; i < 42; i++) {\n      sum.push(pictures[0]);\n    }\n    this.setState({ arrayOfIndex: sum });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"keypress\", this.handleChangeDirection.bind(this));\n  }\n\n  handleDirection(index) {\n    this.state.direction\n      ? this.changeRenderedPictures(index)\n      : this.changeRenderedPicturesBackwards(index);\n  }\n\n  async changeRenderedPicturesBackwards(index) {\n    const { arrayOfIndex } = this.state;\n    for (let i = index; i > -1; i--) {\n      await new Promise(resolve => {\n        this.setState(\n          {\n            arrayOfIndex: [\n              ...this.state.arrayOfIndex.slice(0, i),\n              (this.state.arrayOfIndex[i] + 1) % pictures.length,\n              ...this.state.arrayOfIndex.slice(i + 1)\n            ]\n          },\n          resolve\n        );\n      });\n\n      await delay(100);\n    }\n  }\n\n  async changeRenderedPictures(index) {\n    const { arrayOfIndex } = this.state;\n    for (let i = index; i < arrayOfIndex.length; i++) {\n      await new Promise(resolve => {\n        this.setState(\n          {\n            arrayOfIndex: [\n              ...this.state.arrayOfIndex.slice(0, i),\n              (this.state.arrayOfIndex[i] + 1) % pictures.length,\n              ...this.state.arrayOfIndex.slice(i + 1)\n            ]\n          },\n          resolve\n        );\n      });\n\n      await delay(100);\n    }\n  }\n\n  handleChangeDirection(event) {\n    switch (event.key) {\n      case \"d\":\n        this.setState({\n          direction: !this.state.direction\n        });\n    }\n  }\n\n  render() {\n    console.log(this.state.direction);\n\n    const imageStyle = {\n      height: \"18vh\",\n      margin: \"5px\",\n      padding: \"5px\",\n      border: \"10px solid white \"\n    };\n    const wrapperHotdogStyle = {\n      display: \"flex\",\n      margin: \"0px\",\n      border: \"1px solid black \",\n      flexWrap: \"wrap\"\n    };\n    const pacStyle = {\n      display: \"flex\",\n      height: \"30vh\",\n      alignContent: \"center\",\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      backgroundColor: \"red\",\n      container: \"red\"\n    };\n    const outerWrapperStyle = {\n      backgroundColor: \"red\"\n    };\n\n    const pacDirection = this.state.direction ? pacMouth : pacMouth2;\n\n    const images = this.state.arrayOfIndex.map((number, index) => (\n      <div style={wrapperHotdogStyle}>\n        <img\n          src={pictures[number]}\n          onClick={this.handleDirection.bind(this, index)}\n          alt=\"\"\n          style={imageStyle}\n        />\n      </div>\n    ));\n\n    console.log(this.state.arrayOfIndex);\n\n    return (\n      <div style={outerWrapperStyle}>\n        <img src={pacDirection} style={pacStyle} />\n        <HotDog images={images} />\n      </div>\n    );\n  }\n}\n\nclass HotDog extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const wrapperStyle = {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      alignContent: \"flex-start\",\n      background: \"red\",\n      alignItems: \"stretch\"\n    };\n    return <div style={wrapperStyle}>{this.props.images}</div>;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}